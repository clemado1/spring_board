<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">
	
	<security:http auto-config="true" use-expressions="true">
		<security:form-login login-processing-url="/j_spring_security_check" login-page="/login" default-target-url="/"
            authentication-failure-url="/login?error" username-parameter="username" password-parameter="password"/>
   		<security:logout invalidate-session="true" logout-url="/logout" logout-success-url="/login"/>
   		<security:intercept-url pattern="/resources/**" access="permitAll" />
		<security:intercept-url pattern="/admin" access="hasRole('ROLE_ADMIN')"/>
		<security:intercept-url pattern="/write_form" access="hasRole('ROLE_USER')" />
		<security:intercept-url pattern="/write" access="hasRole('ROLE_USER')" />
		<security:intercept-url pattern="/modify" access="hasRole('ROLE_USER')" />
		<security:intercept-url pattern="/modify_form" access="hasRole('ROLE_USER')" />
		<security:intercept-url pattern="/reply" access="hasRole('ROLE_USER')" />
		<security:intercept-url pattern="/comment" access="hasRole('ROLE_USER')" />
		<security:intercept-url pattern="/mypage" access="hasRole('ROLE_USER')" />
		<security:intercept-url pattern="/mod_name" access="hasRole('ROLE_USER')" />
		<security:intercept-url pattern="/mod_pswd" access="hasRole('ROLE_USER')" />
		<security:intercept-url pattern="/**" access="permitAll" />
		 
	</security:http>
	
	<!-- 
	<security:authentication-manager>
		<security:authentication-provider>
			<security:user-service>
				<security:user name="user" password="123" authorities="ROLE_USER"/>
				<security:user name="admin" password="123" authorities="ROLE_ADMIN,ROLE_USER"/>
			</security:user-service>
		</security:authentication-provider>
	</security:authentication-manager>
	-->
	
	<security:authentication-manager>
	  <security:authentication-provider>
	     <security:password-encoder ref="passwordEncoder"/>
	     <security:jdbc-user-service 
	     data-source-ref="dataSource"
	     users-by-username-query="SELECT email as username, passwd as password, CASE enabled WHEN 1 THEN 'true' ELSE 'false' END enabled FROM user WHERE email = ?"
	     authorities-by-username-query="SELECT email as username, role as authority FROM user_role WHERE email = ?"
	     />
	  </security:authentication-provider>
	</security:authentication-manager>
   
   	<bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
   	</bean>

</beans>